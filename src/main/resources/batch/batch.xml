<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location"
			value="classpath:batch/input-file-descriptor.properties" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>

	<bean class="org.springframework.batch.core.scope.StepScope" />

	<bean id="customEditorConfigurer"
		class="org.springframework.beans.factory.config.CustomEditorConfigurer">
		<property name="customEditors">
			<map>
				<entry key="org.springframework.batch.item.file.transform.Range[]"
					value="org.springframework.batch.item.file.transform.RangeArrayPropertyEditor" />
			</map>
		</property>
	</bean>

	<!-- <batch:job id="processInputFile"> <batch:step id="getFile"> <batch:tasklet 
		throttle-limit="1"> <batch:chunk reader="" writer="" commit-interval="1"/> 
		</batch:tasklet> </batch:step> </batch:job> -->

	<!-- <bean id="processInputFileReader" class="" /> -->

	<!-- <bean id="processFileStepListener" class="io.github.pbremer.icecreammanager.batch.listener.ProcessFileStepListener" 
		/> -->

	<bean id="inputFileHeaderAndTrailerItemReader"
		class="io.github.pbremer.icecreammanager.batch.reader.InputFileHeaderAndTrailerItemReader"
		scope="step">
		<description>Item reader that maps the lines to a single
			HeaderTrailerContainer for processing
		</description>
		<property name="delegate">
			<bean class="org.springframework.batch.item.file.FlatFileItemReader">
				<property name="resource" value="#{stepExecutionContext['input.file.name']}" />
				<property name="lineMapper">
					<bean
						class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
						<property name="fieldSetMapper">
							<bean
								class="org.springframework.batch.item.file.mapping.PassThroughFieldSetMapper" />
						</property>
						<property name="lineTokenizer">
							<bean
								class="org.springframework.batch.item.file.transform.PatternMatchingCompositeLineTokenizer">
								<property name="tokenizers">
									<map>
										<entry key="HD*">
											<bean
												class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
												<property name="names" value="${inputfile.trailer.names}" />
												<property name="columns" value="${inputfile.trailer.columns}" />
												<property name="strict" value="false" />
											</bean>
										</entry>
										<entry key="T*">
											<bean
												class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
												<property name="names" value="${inputfile.trailer.names}" />
												<property name="columns" value="${inputfile.trailer.columns}" />
												<property name="strict" value="false" />
											</bean>
										</entry>
										<entry key="*">
											<bean
												class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
												<property name="columns" value="${inputfile.process.columns}" />
												<property name="strict" value="false" />
											</bean>
										</entry>
									</map>
								</property>
							</bean>
						</property>
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="cityItemReader"
		class="io.github.pbremer.icecreammanager.batch.reader.CityInputFileReader"
		scope="step">
		<description>Item reader that maps the lines to multiple
			CityFlatFileContainer
		</description>
		<property name="delegate">
			<bean class="org.springframework.batch.item.file.FlatFileItemReader">
				<property name="resource" value="#{jobParameters['input.file.name']}" />
				<property name="lineMapper">
					<bean
						class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
						<property name="fieldSetMapper">
							<bean
								class="org.springframework.batch.item.file.mapping.PassThroughFieldSetMapper" />
						</property>
						<property name="lineTokenizer">
							<bean
								class="org.springframework.batch.item.file.transform.PatternMatchingCompositeLineTokenizer">
								<property name="tokenizers">
									<map>
										<entry key="^[\S]{3,}.*">
											<bean
												class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
												<property name="names" value="${inputfile.city.names}" />
												<property name="columns" value="${inputfile.city.columns}" />
												<property name="strict" value="false" />
											</bean>
										</entry>
										<entry key=".*">
											<bean
												class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
												<property name="columns" value="${inputfile.process.columns}" />
												<property name="strict" value="false" />
											</bean>
										</entry>
									</map>
								</property>
							</bean>
						</property>
					</bean>
				</property>
			</bean>
		</property>
	</bean>
	
	<bean id="routeItemReader"
		class="io.github.pbremer.icecreammanager.batch.reader.RouteInputFileReader"
		scope="step">
		<description>Item reader that maps the lines to multiple
			RouteFlatFileContainer
		</description>
		<property name="delegate">
			<bean class="org.springframework.batch.item.file.FlatFileItemReader">
				<property name="resource" value="#{jobParameters['input.file.name']}" />
				<property name="lineMapper">
					<bean
						class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
						<property name="fieldSetMapper">
							<bean
								class="org.springframework.batch.item.file.mapping.PassThroughFieldSetMapper" />
						</property>
						<property name="lineTokenizer">
							<bean
								class="org.springframework.batch.item.file.transform.PatternMatchingCompositeLineTokenizer">
								<property name="tokenizers">
									<map>
										<entry key="^[ACD].*">
											<bean
												class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
												<property name="names" value="${inputfile.route.names}" />
												<property name="columns" value="${inputfile.route.columns}" />
												<property name="strict" value="false" />
											</bean>
										</entry>
										<entry key=".*">
											<bean
												class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
												<property name="columns" value="${inputfile.process.columns}" />
												<property name="strict" value="false" />
											</bean>
										</entry>
									</map>
								</property>
							</bean>
						</property>
					</bean>
				</property>
			</bean>
		</property>
	</bean>
	
	<bean id="truckItemReader"
		class="io.github.pbremer.icecreammanager.batch.reader.TruckInputFileReader"
		scope="step">
		<description>Item reader that maps the lines to multiple
			TruckFlatFileContainer
		</description>
		<property name="delegate">
			<bean class="org.springframework.batch.item.file.FlatFileItemReader">
				<property name="resource" value="#{jobParameters['input.file.name']}" />
				<property name="lineMapper">
					<bean
						class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
						<property name="fieldSetMapper">
							<bean
								class="org.springframework.batch.item.file.mapping.PassThroughFieldSetMapper" />
						</property>
						<property name="lineTokenizer">
							<bean
								class="org.springframework.batch.item.file.transform.PatternMatchingCompositeLineTokenizer">
								<property name="tokenizers">
									<map>
										<entry key="^[0-9]{4}">
											<bean
												class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
												<property name="names" value="${inputfile.truck.names}" />
												<property name="columns" value="${inputfile.truck.columns}" />
												<property name="strict" value="false" />
											</bean>
										</entry>
										<entry key=".*">
											<bean
												class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
												<property name="columns" value="${inputfile.process.columns}" />
												<property name="strict" value="false" />
											</bean>
										</entry>
									</map>
								</property>
							</bean>
						</property>
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="truckSalesItemReader"
		class="io.github.pbremer.icecreammanager.batch.reader.TruckSalesItemReader"
		scope="step">
		<description>Item reader that maps the lines to multiple
			TruckSalesFlatFileContainer
		</description>
		<property name="delegate">
			<bean class="org.springframework.batch.item.file.FlatFileItemReader">
				<property name="resource" value="#{jobParameters['input.file.name']}" />
				<property name="lineMapper">
					<bean
						class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
						<property name="fieldSetMapper">
							<bean
								class="org.springframework.batch.item.file.mapping.PassThroughFieldSetMapper" />
						</property>
						<property name="lineTokenizer">
							<bean
								class="org.springframework.batch.item.file.transform.PatternMatchingCompositeLineTokenizer">
								<property name="tokenizers">
									<map>
										<entry key="TR*">
											<bean
												class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
												<property name="names"
													value="${inputfile.trucksales.truckrow.names}" />
												<property name="columns"
													value="${inputfile.trucksales.truckrow.columns}" />
												<property name="strict" value="false" />
											</bean>
										</entry>
										<entry key="SR*">
											<bean
												class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
												<property name="names"
													value="${inputfile.trucksales.salesrow.names}" />
												<property name="columns"
													value="${inputfile.trucksales.salesrow.columns}" />
												<property name="strict" value="false" />
											</bean>
										</entry>
										<entry key="*">
											<bean
												class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
												<property name="names"
													value="${inputfile.trucksales.inventoryrow.names}" />
												<property name="columns"
													value="${inputfile.trucksales.inventoryrow.columns}" />
												<property name="strict" value="false" />
											</bean>
										</entry>
									</map>
								</property>
							</bean>
						</property>
					</bean>
				</property>
			</bean>
		</property>
	</bean>

</beans>
